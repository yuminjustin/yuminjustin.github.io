{
	"name": "article",
	"data": {
		"title": "Todos",
		"updateTime": "2016-03-21 17:04:00",
		"body": [
			"示例图：",
			"<img src='/uploads/20160321.jpg' class='arcImg'>",
			"<b>1、Todo-for-mithril</b>",
			"基于mithril 和 requirejs；",
			"之前学过一段时间的angular，只学了点皮毛；换了家公司，公司用的是backbone，太麻烦，代码量非常大。backbone也是轻量级的，但是它更像是在管理代码，而非真正去实现mvc，不过它对于新手来说是个非常好的启蒙框架。",
            "mithril是一个非常轻巧的mvc框架（个人比较喜欢），也采用了Virtual Dom，页面渲染非常快；",
			"查看代码：<a href='https://github.com/yuminjustin/Todo-for-mithril' target='_blank'>Go！</a>",
			"<b>2、Todo-for-react</b>",
			"由于react的独特语法这里就没使用requirejs作管理，有兴趣的也可以自己试试，这里直接用jsx了；",
			"react是个偏向与view的框架，最先采用了Virtual Dom的思想的框架，这也是它风靡的原因，不论是在web上直接使用还是node下都有很好的只支持，目前先学习直接在web页面上使用",
			"查看代码：<a href='https://github.com/yuminjustin/Todo-for-react' target='_blank'>Go！</a>",
			"<b>3、Todo-for-angular</b>",
			"双向绑定的确不是盖的！感觉就能写配置文件一样，写好了完全是angular在工作，高效的框架；",
			"之前自学过一段时间，但没有实际经验，也的确是有了backbone的基础，再回过头看angular，概念逻辑会清晰很多！",
			"查看代码：<a href='https://github.com/yuminjustin/Todo-for-angular' target='_blank'>Go！</a>",
			"<b>4、Todo-for-redux</b>",
			"好麻烦好麻烦，几乎每个Action都对应一个状态，这让我回想起J2EE的SSH，感觉很糟糕。查看代码：<a href='https://github.com/yuminjustin/Todo-for-redux' target='_blank'>Go！</a>",
			"<b>5、Todo-for-Vue</b>",
			"Vue可以让你看到Angular和React的影子，但又不是，它继承了后两者的优点，也有自己的一套规则。使用Vue来开发太有意思了，代码非常整洁还支持AMD，相比起其它框架它是如此优雅。",
			"查看代码：<a href='https://github.com/yuminjustin/Todo-for-Vue' target='_blank'>Go！</a>",
			"<b>操作方式：添加之后，双击修改，点击checkbox删除；（未做本地存储和筛选功能）</b>",
			"对于习惯了面向过程的同学，这三款框架不要盲目的盲从，首先要转变思想，实际上backbone就是一个你在转变思想的过渡期很好的老师，毕竟它是最容易上手的。。"
		]
	}
}
